<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.da.mapper.UserLoginMapper" >
  <resultMap id="BaseResultMap" type="com.da.pojo.UserLogin" >
    <id column="id" property="id" jdbcType="CHAR" />
    <result column="seq_id" property="seqId" jdbcType="CHAR" />
    <result column="user_id" property="userId" jdbcType="CHAR" />
    <result column="login_name" property="loginName" jdbcType="VARCHAR" />
    <result column="pwd" property="pwd" jdbcType="VARCHAR" />
    <result column="error_count" property="errorCount" jdbcType="BIT" />
    <result column="create_at" property="createAt" jdbcType="TIMESTAMP" />
    <result column="update_at" property="updateAt" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, seq_id, user_id, login_name, pwd, error_count, create_at, update_at
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user_login
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user_login
    where id = #{id,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="com.da.pojo.UserLogin" >
    insert into user_login (id, seq_id, user_id, login_name, 
      pwd, error_count, create_at, 
      update_at)
    values (#{id,jdbcType=CHAR}, #{seqId,jdbcType=CHAR}, #{userId,jdbcType=CHAR}, #{loginName,jdbcType=VARCHAR}, 
      #{pwd,jdbcType=VARCHAR}, #{errorCount,jdbcType=BIT}, #{createAt,jdbcType=TIMESTAMP}, 
      #{updateAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.da.pojo.UserLogin" >
    insert into user_login
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="seqId != null" >
        seq_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="loginName != null" >
        login_name,
      </if>
      <if test="pwd != null" >
        pwd,
      </if>
      <if test="errorCount != null" >
        error_count,
      </if>
      <if test="createAt != null" >
        create_at,
      </if>
      <if test="updateAt != null" >
        update_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=CHAR},
      </if>
      <if test="seqId != null" >
        #{seqId,jdbcType=CHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=CHAR},
      </if>
      <if test="loginName != null" >
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null" >
        #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="errorCount != null" >
        #{errorCount,jdbcType=BIT},
      </if>
      <if test="createAt != null" >
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null" >
        #{updateAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.da.pojo.UserLogin" >
    update user_login
    <set >
      <if test="seqId != null" >
        seq_id = #{seqId,jdbcType=CHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=CHAR},
      </if>
      <if test="loginName != null" >
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null" >
        pwd = #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="errorCount != null" >
        error_count = #{errorCount,jdbcType=BIT},
      </if>
      <if test="createAt != null" >
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null" >
        update_at = #{updateAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.da.pojo.UserLogin" >
    update user_login
    set seq_id = #{seqId,jdbcType=CHAR},
      user_id = #{userId,jdbcType=CHAR},
      login_name = #{loginName,jdbcType=VARCHAR},
      pwd = #{pwd,jdbcType=VARCHAR},
      error_count = #{errorCount,jdbcType=BIT},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      update_at = #{updateAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=CHAR}
  </update>
</mapper>