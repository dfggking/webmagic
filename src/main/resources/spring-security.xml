<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:beans="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                           http://www.springframework.org/schema/security
                           http://www.springframework.org/schema/security/spring-security-3.1.xsd">
<global-method-security  pre-post-annotations="enabled" />
  <!-- 不需要权限访问 -->
  <http pattern="/index" security="none" />
  <http pattern="/admin/index" security="none" />
  <http pattern="/404.jsp" security="none" />
  <http pattern="/500.jsp" security="none" />
  <http pattern="/index.jsp" security="none" />
  <http pattern="/access.jsp" security="none" />
  <http pattern="/error.jsp" security="none" />
  <http pattern="/sessionTimeout.jsp" security="none" />
  <!--以上部分可根据自己的需求设定那些事不需要拦截的，然后直接放行就ok了 -->
  <http auto-config='true'>
    <!-- 没有权限跳转页面 -->
    <access-denied-handler error-page="/access.jsp" />

    <!-- 校验登陆可访问 -->
    <intercept-url pattern="/**" access="IS_AUTHENTICATED_FULLY" />
    <form-login
      login-page="/system/loginpage"
      login-processing-url="/logincheck"
      authentication-failure-handler-ref="failureHandler"
      authentication-success-handler-ref="successHandler" />
    <logout
      logout-url="/logout"
      logout-success-url="/system/loginpage" />

    <!--session 不做处理 -->
    <session-management invalid-session-url="/system/loginpage" session-fixation-protection="none">

      <concurrency-control max-sessions="1" error-if-maximum-exceeded="false" expired-url="/system/loginpage" />
    </session-management>
    <!-- 1、注释此过滤器，不再验证是否有访问权限(访问所有资源不再判断是否具有权限) 2、注释此过滤器，并更改max-sessions="9999",可用一个账号登陆9999次,并且不再验证是否有访问权限(访问所有资源不再判断是否具有权限) -->
    <custom-filter ref="mySecurityFilter" before="FILTER_SECURITY_INTERCEPTOR" />
  </http>

  <authentication-manager alias="authManager" erase-credentials="false">
    <authentication-provider user-service-ref="userServiceDetail">
      <password-encoder ref="passwordEncoder" />
    </authentication-provider>
  </authentication-manager>
  <!-- SHA加密方式 -->
  <bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder" />

  <!-- 登录失败后业务处理 -->
  <bean id="failureHandler" class="com.xxxx.web.security.LoginAuthenticationFailureHandler">
    <property name="userService" ref="userService" />
    <property name="sysLogService" ref="sysLogService" />
    <property name="loginRegisterService" ref="loginRegisterService" />
  </bean>
  <!-- 登录成功业务处理 -->
  <bean id="successHandler" class="com.xxxx.web.security.LoginAuthenticationSuccesssHandler">
    <property name="loginRegisterService" ref="loginRegisterService" />
    <property name="sysLogService" ref="sysLogService" />
    <property name="userService" ref="userService" />
    <property name="saasTenantService" ref="saasTenantCoreService" />
    <property name="defaultUrl" value="/index.do" /><!-- 可变换登录成功后的路径，验证用户是否拥有该权限 -->
  </bean>
  <!-- 自定义过滤器 -->
  <bean id="mySecurityFilter" class="com.xxxx.web.security.MyFilterSecurityInterceptor">
    <property name="accessDecisionManager" ref="accessDescisionManager" />
    <property name="fisMetadataSource" ref="securityMetadataSource" />
    <property name="authenticationManager" ref="authManager" />
  </bean>
  <bean id="securityMetadataSource" class="com.xxxx.web.security.MySecurityMetadataSource">
    <constructor-arg name="rolePermissionService" ref="rolePermissionService" />
  </bean>
  <bean id="accessDescisionManager" class="com.xxxx.web.security.MyAccessDescisionManager" />
  <bean id="userServiceDetail" class="com.xx.web.security.MyUserDetailServiceImpl">
    <property name="userService" ref="userService" />
    <property name="rolePermissionService" ref="rolePermissionService" />
    <property name="permissionService" ref="permissionService" />
    <property name="userRoleService" ref="userRoleService" />
    <property name="loginRegisterService" ref="saasTenantCoreService" />
  </bean>
</beans>
